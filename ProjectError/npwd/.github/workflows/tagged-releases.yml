name: Tagged Release Publisher
on:
  push:
    tags:
      - "*"
jobs:
  bump-manifest-version:
    name: 'Bump fxmanifest version'
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Bump manifest version
        run: node .github/actions/bump-manifest-version.js
        env:
          TGT_RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      - name: Push manifest change
        uses: EndBug/add-and-commit@v8
        with:
          add: fxmanifest.lua
          push: true
          author_name: Manifest Bumper
          author_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: 'chore(bump-manifest): Bump manifest version to ${{ env.RELEASE_VERSION }}'
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_SECRET }}

  create-tagged-release:
    name: Build and Create Tagged Release
    runs-on: ubuntu-latest
    needs: [bump-manifest-version]

    steps:
      - name: Get tag
        run: echo ::set-output name=VERSION_TAG::${GITHUB_REF/refs\/tags\//}
        id: get_tag
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run build
        run: REACT_APP_VERSION=${{ steps.get_tag.outputs.VERSION_TAG }} yarn build

      #- name: Create Sentry Release (NPWD)
      #  run: |
      #    curl -sL https://sentry.io/get-cli/ | bash
      #    export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
      #    export SENTRY_ORG=project-error
      #    export SENTRY_PROJECT=npwd
      #    export SENTRY_URL=https://sentry.projecterror.dev/
      #    export VERSION=${{ steps.get_tag.outputs.VERSION_TAG }}

      #    sentry-cli releases new "$VERSION"
      #    sentry-cli releases set-commits "$VERSION" --auto
      #    sentry-cli releases files "$VERSION" upload-sourcemaps resources/html --ext map --url-prefix '~/resources/html'
      #    sentry-cli releases finalize "$VERSION"

      #    sentry-cli releases deploys "$VERSION" new -e production
      - name: Bundle built files
        run: |
          mkdir -p ./temp/npwd/dist
          cp ./{LICENSE,README.md,config.json,import.sql,fxmanifest.lua} ./temp/npwd/
          cp -r ./dist/{game,html} ./temp/npwd/dist
          # Make sure we copy our one lua boy
          cp ./apps/game/client/cl_controls.lua ./temp/npwd/dist/game/client/cl_controls.lua
          cd ./temp && zip -r ../npwd.zip ./npwd

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        id: auto_release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: NPWD Release | ${{ steps.get_tag.outputs.VERSION_TAG }}
          prerelease: false
          files: npwd.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-npwd-packages:
    name: Build NPWD packages
    runs-on: ubuntu-latest
    needs: [create-tagged-release, bump-manifest-version]

    steps:
      - name: Get tag
        run: echo ::set-output name=VERSION_TAG::${GITHUB_REF/refs\/tags\//}
        id: get_tag
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --frozen-lockfile

      # Build all packages
      - name: Build @npwd/types
        run: |
          yarn generate:typings
          cd ./packages/npwd-types
          git config user.email "chip@projecterror.dev"
          git config user.name "itschip"
          yarn version --new-version ${{ steps.get_tag.outputs.VERSION_TAG }}

      - name: Release @npwd/types
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: './packages/npwd-types/package.json'
          access: 'public'

      - name: Build @npwd/hooks
        run: |
          cd ./packages/npwd-hooks
          yarn build
          git config user.email "chip@projecterror.dev"
          git config user.name "itschip"
          yarn version --new-version ${{ steps.get_tag.outputs.VERSION_TAG }}

      - name: Release @npwd/hooks
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: './packages/npwd-hooks/package.json'
          access: 'public'
